{"_type":"export","__export_format":4,"__export_date":"2024-04-28T20:02:59.163Z","__export_source":"insomnia.desktop.app:v2023.2.0","resources":[{"_id":"req_18458add59c94616b0a83c54a549b5c8","parentId":"fld_d0c0fe7b548b40c9b29140da9b955631","modified":1713727980539,"created":1713481917016,"url":"localhost:3000/","name":"main page","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1713481889504.125,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_d0c0fe7b548b40c9b29140da9b955631","parentId":"wrk_3cb044e4a04640cba947efeef7ae4631","modified":1713725359098,"created":1713481832668,"name":"Marvel","description":"","environment":{},"environmentPropertyOrder":{},"metaSortKey":-1713481832669,"_type":"request_group"},{"_id":"wrk_3cb044e4a04640cba947efeef7ae4631","parentId":null,"modified":1679014170446,"created":1679014170446,"name":"New Document","description":"","scope":"design","_type":"workspace"},{"_id":"req_9772d9590e284608b8e3ee3a265eb35e","parentId":"fld_d0c0fe7b548b40c9b29140da9b955631","modified":1713727975251,"created":1713225741231,"url":"localhost:3000/series","name":"serie","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1713481888203.4375,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_facc11d6c7c94636af28ba97500e0c83","parentId":"fld_521cff2f3d204b3bbc4a972daf68abb0","modified":1713481904460,"created":1713397204086,"url":"localhost:3000/characters","name":"characters","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014170154,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_521cff2f3d204b3bbc4a972daf68abb0","parentId":"fld_d0c0fe7b548b40c9b29140da9b955631","modified":1713727972025,"created":1713481902511,"name":"characters","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1713481886902.75,"_type":"request_group"},{"_id":"req_fc5e27eef2dd40ffac284538cc316dd4","parentId":"fld_521cff2f3d204b3bbc4a972daf68abb0","modified":1713727913027,"created":1713727911165,"url":"localhost:3000/characters/total","name":"characters/total","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014170141.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_e6c61e7a176a47a28057576a92c40cde","parentId":"fld_521cff2f3d204b3bbc4a972daf68abb0","modified":1713725488028,"created":1713725483969,"url":"localhost:3000/characters/1009281","name":"characters/id","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014170129,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_9d6d9131263d4c49b6482d6cee226011","parentId":"fld_521cff2f3d204b3bbc4a972daf68abb0","modified":1713481906460,"created":1713398474362,"url":"localhost:3000/characters/1010697/comics","name":"characters/id/comics","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014170104,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_15d91e968bcc48b0b88784e9d2331202","parentId":"fld_521cff2f3d204b3bbc4a972daf68abb0","modified":1713727876359,"created":1713397413800,"url":"localhost:3000/characters","name":"characters","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\t\"id\": 11,\n\t\t\"name\": \"TESTEEE\",\n\t\t\"description\": \"test\",\n\t\t\"thumbnail\": \"http://i.annihil.us/u/prod/marvel/i/mg/3/60/53176bb096d17.jpg\",\n\t\t\"comics\": [\n\t\t]\n\t}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1679014170054,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_4412661891f44a6580123128afb93c6c","parentId":"fld_521cff2f3d204b3bbc4a972daf68abb0","modified":1713725532931,"created":1713397467637,"url":"localhost:3000/characters/11","name":"characters","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\t\"name\": \"testa\",\n\t\t\"description\": \"test update\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1679014170004,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_2111aba894484caaaf990e80b24e2381","parentId":"fld_521cff2f3d204b3bbc4a972daf68abb0","modified":1713481910759,"created":1713397488402,"url":"localhost:3000/characters/11","name":"characters","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014169954,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_db5e277380d34afba24574524ced4b82","parentId":"fld_f1395de3db4a488395a2d51cbbde66e8","modified":1713481883518,"created":1713315258802,"url":"localhost:3000/creators","name":"creators","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014170354,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_f1395de3db4a488395a2d51cbbde66e8","parentId":"fld_d0c0fe7b548b40c9b29140da9b955631","modified":1713481881700,"created":1713481881700,"name":"creators","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1713481881700,"_type":"request_group"},{"_id":"req_02c20fa62cf342618bb03f7f603ebf3f","parentId":"fld_f1395de3db4a488395a2d51cbbde66e8","modified":1713725429783,"created":1713725427189,"url":"localhost:3000/creators/567","name":"creators/id","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014170329,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_2e342302aa7648a38e14269273c21c2c","parentId":"fld_f1395de3db4a488395a2d51cbbde66e8","modified":1713481885394,"created":1713478468050,"url":"localhost:3000/creators/567/comics","name":"creators/id/comics","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014170304,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_8509f13b70344a37a6d8d46bf927ddff","parentId":"fld_f1395de3db4a488395a2d51cbbde66e8","modified":1713727896942,"created":1713394123485,"url":"localhost:3000/creators","name":"creators","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\t\"id\": 4,\n\t\t\"firstName\": \"Allan\",\n\t\t\"lastName\": \"Ogawa\",\n\t\t\"fullName\": \"Allan Ogawa\",\n\t\t\"thumbnail\": \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\",\n\t\t\"comics\": [\n\t],\n\t\"role\": \"penciller\"\n\t}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1679014170254,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_b886abbed5bc41a6a6d50eea3004671d","parentId":"fld_f1395de3db4a488395a2d51cbbde66e8","modified":1713481892797,"created":1713394247259,"url":"localhost:3000/creators/4","name":"creators","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\t\"firstName\": \"Test\",\n\t\t\"lastName\": \"Testwww\",\n\t\t\"fullName\": \"Test Testwww\"\n\t}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1679014170204,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_07861073345646bd8f85f563cb95f219","parentId":"fld_f1395de3db4a488395a2d51cbbde66e8","modified":1713481894195,"created":1713394289924,"url":"localhost:3000/creators/4","name":"creators","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014170154,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_7a5572650b614af29fa0da741ae0eb62","parentId":"fld_9057a5f97f214d40a7f1cecee14d4606","modified":1713481865204,"created":1679014170504,"url":"localhost:3000/comics","name":"comics","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014170504,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_9057a5f97f214d40a7f1cecee14d4606","parentId":"fld_d0c0fe7b548b40c9b29140da9b955631","modified":1713481862682,"created":1713481862682,"name":"comics","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1713481862682,"_type":"request_group"},{"_id":"req_32b40684126b408b966a7c4f8138a1c5","parentId":"fld_9057a5f97f214d40a7f1cecee14d4606","modified":1713727059470,"created":1713727057570,"url":"localhost:3000/comics/total","name":"comics/total","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014170500.875,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_ed4e10d8d2e5468a8319c00497ecde93","parentId":"fld_9057a5f97f214d40a7f1cecee14d4606","modified":1713727433574,"created":1713725439989,"url":"localhost:3000/comics/4","name":"comics/issueNumber","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014170497.75,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_f2d8d8c59aa04f99bd6ffb8d02fea4c9","parentId":"fld_9057a5f97f214d40a7f1cecee14d4606","modified":1713724771678,"created":1713724605514,"url":"localhost:3000/comics/1/characters","name":"comics/issueNumber/characters","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014170491.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_216677be7d9a455f9f616f1db09c1643","parentId":"fld_9057a5f97f214d40a7f1cecee14d4606","modified":1713725032031,"created":1713724903620,"url":"localhost:3000/comics/7/creators","name":"comics/issueNumber/creators","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014170485.25,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_fbbb72e7d6ab4404b6a3af932880e895","parentId":"fld_9057a5f97f214d40a7f1cecee14d4606","modified":1713481867833,"created":1713310486317,"url":"localhost:3000/comics","name":"comics","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\t\"id\": 111,\n\t\t\"issueNumber\": 9,\n\t\t\"title\": \"1602 (2012) #8\",\n\t\t\"description\": \"CLIMATIC last issue! Secrets revealed! Mysteries explained! A mighty sacrifice! Worlds live! Worlds die! Heroes make choices! And so do villains...\",\n\t\t\"onsaleDate\": \"2004-03-31T05:00:00.000Z\",\n\t\t\"price\": 3.99,\n\t\t\"thumbnail\": \"http://i.annihil.us/u/prod/marvel/i/mg/5/c0/5aa052106f9d3.jpg\"\n\t}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1679014170479,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_cd3c0c61d2964c4fa2bca5b948485b0d","parentId":"fld_9057a5f97f214d40a7f1cecee14d4606","modified":1713481866511,"created":1713312268019,"url":"localhost:3000/comics/9","name":"comics","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\t\"title\": \"999999\",\n\t\t\"price\": 13.99\n\t}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1679014170454,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_4981d5f3f4e84fa1a7a1d8cfcedaad96","parentId":"fld_9057a5f97f214d40a7f1cecee14d4606","modified":1713481869509,"created":1713311000906,"url":"localhost:3000/comics/9","name":"comics","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679014170404,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_e902382462a2a67c1ab5e9b145177162290f47ed","parentId":"wrk_3cb044e4a04640cba947efeef7ae4631","modified":1713314349492,"created":1679014170496,"name":"Base Environment","data":{},"dataPropertyOrder":{},"color":null,"isPrivate":false,"metaSortKey":1679014170496,"_type":"environment"},{"_id":"jar_e902382462a2a67c1ab5e9b145177162290f47ed","parentId":"wrk_3cb044e4a04640cba947efeef7ae4631","modified":1679014170499,"created":1679014170499,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_1a73d956b9044c23945c713a1e525c59","parentId":"wrk_3cb044e4a04640cba947efeef7ae4631","modified":1714334174470,"created":1713728103118,"fileName":"New Document","contents":"openapi: 3.0.0\ninfo:\n  description: \"This is a sample server Petstore server.  You can find out more about\n    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\n    #swagger](http://swagger.io/irc/).  For this sample, you can use the api key\n    `special-key` to test the authorization filters.\"\n  version: 1.0.2\n  title: Swagger Petstore\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\ntags:\n  - name: pet\n    description: Everything about your Pets\n    externalDocs:\n      description: Find out more\n      url: http://swagger.io\n  - name: store\n    description: Access to Petstore orders\n  - name: user\n    description: Operations about user\n    externalDocs:\n      description: Find out more about our store\n      url: http://swagger.io\npaths:\n  /pet:\n    post:\n      tags:\n        - pet\n      summary: Add a new pet to the store\n      description: \"\"\n      operationId: addPet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"405\":\n          description: Invalid input\n    put:\n      tags:\n        - pet\n      summary: Update an existing pet\n      description: \"\"\n      operationId: updatePet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n        \"405\":\n          description: Validation exception\n  /pet/findByStatus:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma separated strings\n      operationId: findPetsByStatus\n      parameters:\n        - name: status\n          in: query\n          description: Status values that need to be considered for filter\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - available\n                - pending\n                - sold\n              default: available\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid status value\n  /pet/findByTags:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by tags\n      description: Multiple tags can be provided with comma separated strings. Use tag1,\n        tag2, tag3 for testing.\n      operationId: findPetsByTags\n      parameters:\n        - name: tags\n          in: query\n          description: Tags to filter by\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid tag value\n      deprecated: true\n  \"/pet/{petId}\":\n    get:\n      tags:\n        - pet\n      summary: Find pet by ID\n      description: Returns a single pet\n      operationId: getPetById\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n    post:\n      tags:\n        - pet\n      summary: Updates a pet in the store with form data\n      description: \"\"\n      operationId: updatePetWithForm\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet that needs to be updated\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Updated name of the pet\n                  type: string\n                status:\n                  description: Updated status of the pet\n                  type: string\n      responses:\n        \"405\":\n          description: Invalid input\n    delete:\n      tags:\n        - pet\n      summary: Deletes a pet\n      description: \"\"\n      operationId: deletePet\n      parameters:\n        - name: api_key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: petId\n          in: path\n          description: Pet id to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n  /store/inventory:\n    get:\n      tags:\n        - store\n      summary: Returns pet inventories by status\n      description: Returns a map of status codes to quantities\n      operationId: getInventory\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: integer\n                  format: int32\n  /store/order:\n    post:\n      tags:\n        - store\n      summary: Place an order for a pet\n      description: \"\"\n      operationId: placeOrder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Order\"\n        description: order placed for purchasing the pet\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid Order\n  \"/store/order/{orderId}\":\n    get:\n      tags:\n        - store\n      summary: Find purchase order by ID\n      description: For valid response try integer IDs with value >= 1 and <= 10. Other\n        values will generated exceptions\n      operationId: getOrderById\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of pet that needs to be fetched\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n            maximum: 10\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n    delete:\n      tags:\n        - store\n      summary: Delete purchase order by ID\n      description: For valid response try integer IDs with positive integer value. Negative\n        or non-integer values will generate API errors\n      operationId: deleteOrder\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of the order that needs to be deleted\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n  /user:\n    post:\n      tags:\n        - user\n      summary: Create user\n      description: This can only be done by the logged in user.\n      operationId: createUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Created user object\n        required: true\n      responses:\n        default:\n          description: successful operation\n  /user/createWithArray:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithArrayInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/createWithList:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithListInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/login:\n    get:\n      tags:\n        - user\n      summary: Logs user into the system\n      description: \"\"\n      operationId: loginUser\n      parameters:\n        - name: username\n          in: query\n          description: The user name for login\n          required: true\n          schema:\n            type: string\n        - name: password\n          in: query\n          description: The password for login in clear text\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          headers:\n            X-Rate-Limit:\n              description: calls per hour allowed by the user\n              schema:\n                type: integer\n                format: int32\n            X-Expires-After:\n              description: date in UTC when token expires\n              schema:\n                type: string\n                format: date-time\n          content:\n            application/xml:\n              schema:\n                type: string\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Invalid username/password supplied\n  /user/logout:\n    get:\n      tags:\n        - user\n      summary: Logs out current logged in user session\n      description: \"\"\n      operationId: logoutUser\n      responses:\n        default:\n          description: successful operation\n  \"/user/{username}\":\n    get:\n      tags:\n        - user\n      summary: Get user by user name\n      description: \"\"\n      operationId: getUserByName\n      parameters:\n        - name: username\n          in: path\n          description: \"The name that needs to be fetched. Use user1 for testing. \"\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/User\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\n    put:\n      tags:\n        - user\n      summary: Updated user\n      description: This can only be done by the logged in user.\n      operationId: updateUser\n      parameters:\n        - name: username\n          in: path\n          description: name that need to be updated\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Updated user object\n        required: true\n      responses:\n        \"400\":\n          description: Invalid user supplied\n        \"404\":\n          description: User not found\n    delete:\n      tags:\n        - user\n      summary: Delete user\n      description: This can only be done by the logged in user.\n      operationId: deleteUser\n      parameters:\n        - name: username\n          in: path\n          description: The name that needs to be deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n  - url: https://petstore.swagger.io/v2\ncomponents:\n  requestBodies:\n    UserArray:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/User\"\n      description: List of user object\n      required: true\n    Pet:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n      description: Pet object that needs to be added to the store\n      required: true\n  schemas:\n    Order:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        petId:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int32\n        shipDate:\n          type: string\n          format: date-time\n        status:\n          type: string\n          description: Order Status\n          enum:\n            - placed\n            - approved\n            - delivered\n        complete:\n          type: boolean\n          default: false\n      xml:\n        name: Order\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        phone:\n          type: string\n        userStatus:\n          type: integer\n          format: int32\n          description: User Status\n      xml:\n        name: User\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Category\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Tag\n    Pet:\n      type: object\n      required:\n        - name\n        - photoUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n        category:\n          $ref: \"#/components/schemas/Category\"\n        name:\n          type: string\n          example: doggie\n        photoUrls:\n          type: array\n          xml:\n            name: photoUrl\n            wrapped: true\n          items:\n            type: string\n        tags:\n          type: array\n          xml:\n            name: tag\n            wrapped: true\n          items:\n            $ref: \"#/components/schemas/Tag\"\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n      xml:\n        name: Pet\n    ApiResponse:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        type:\n          type: string\n        message:\n          type: string","contentType":"yaml","_type":"api_spec"},{"_id":"uts_73362809df4b40d2a210290e1ce48fd5","parentId":"wrk_3cb044e4a04640cba947efeef7ae4631","modified":1679014170507,"created":1679014170507,"name":"Example Test Suite","_type":"unit_test_suite"},{"_id":"uts_75eb2cffd8fc463d965dd412e65e1a85","parentId":"wrk_3cb044e4a04640cba947efeef7ae4631","modified":1679014170507,"created":1679014170507,"name":"Example Test Suite","_type":"unit_test_suite"},{"_id":"uts_8b68d663a4d24191849d684c396bee45","parentId":"wrk_3cb044e4a04640cba947efeef7ae4631","modified":1679014170507,"created":1679014170507,"name":"Example Test Suite","_type":"unit_test_suite"},{"_id":"uts_a55ed58f89db4b9cae6323175477f1c1","parentId":"wrk_3cb044e4a04640cba947efeef7ae4631","modified":1679014170507,"created":1679014170507,"name":"Example Test Suite","_type":"unit_test_suite"}]}